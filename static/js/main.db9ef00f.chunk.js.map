{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","counter","addOne","setState","add100","increase","multiply10","random","Math","floor","setClear","this","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0NAIaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,GAFb,EAKEC,OAAS,WACP,EAAKC,UAAS,SAACH,GAAD,MAAY,CACxBC,QAASD,EAAMC,QAAU,OAP/B,EAWEG,OAAS,WACP,EAAKD,UAAS,SAACH,GAAD,MAAY,CACxBC,QAASD,EAAMC,QAAU,SAb/B,EAiBEI,SAAW,WACT,EAAKF,UAAS,SAACH,GACTA,EAAMC,QAAU,IAAM,GACxB,EAAKC,SACL,EAAKE,UAEL,EAAKF,aAvBb,EA4BEI,WAAa,WACX,EAAKH,UAAS,SAACH,GAAD,MAAY,CACxBC,QAAyB,GAAhBD,EAAMC,aA9BrB,EAkCEM,OAAS,WACP,EAAKJ,UAAS,iBAAO,CACnBF,QAASO,KAAKC,MAAsB,KAAhBD,KAAKD,eApC/B,EAwCEG,SAAW,WACT,EAAKP,SAAS,CAAEF,QAAS,KAzC7B,4CA4CE,WACE,IAAQA,EAAYU,KAAKX,MAAjBC,QAER,OACE,sBAAKW,UAAU,4BAAf,UACE,qBAAIA,UAAU,iBAAd,mBAEGX,KAEH,sBAAKW,UAAU,sBAAf,UACE,wBACEC,KAAK,SACLC,QAASH,KAAKT,OACdU,UAAU,iDAHZ,qBAOA,wBACEC,KAAK,SACLD,UAAU,qDACVE,QAASH,KAAKP,OAHhB,6BAOA,wBACES,KAAK,SACLD,UAAU,sDACVE,QAASH,KAAKL,WAHhB,8BAOA,wBACEO,KAAK,SACLD,UAAU,wDACVE,QAASH,KAAKJ,OAHhB,oBAOA,wBACEM,KAAK,SACLD,UAAU,yDACVE,QAASH,KAAKN,SAHhB,yBAQF,wBACEQ,KAAK,SACLD,UAAU,qDACVE,QAASH,KAAKD,SAHhB,0BA1FR,GAAyBK,IAAMC,WCD/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.db9ef00f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { State } from './react-app-env';\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    counter: 0,\n  };\n\n  addOne = () => {\n    this.setState((state) => ({\n      counter: state.counter + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((state) => ({\n      counter: state.counter + 100,\n    }));\n  };\n\n  increase = () => {\n    this.setState((state) => {\n      if (state.counter % 5 === 0) {\n        this.addOne();\n        this.add100();\n      } else {\n        this.addOne();\n      }\n    });\n  };\n\n  multiply10 = () => {\n    this.setState((state) => ({\n      counter: state.counter * 10,\n    }));\n  };\n\n  random = () => {\n    this.setState(() => ({\n      counter: Math.floor(Math.random() * 1001),\n    }));\n  };\n\n  setClear = () => {\n    this.setState({ counter: 0 });\n  };\n\n  render() {\n    const { counter } = this.state;\n\n    return (\n      <div className=\"counter content is-medium\">\n        <h1 className=\"counter__title\">\n          Count:\n          {counter}\n        </h1>\n        <div className=\"counter__button-box\">\n          <button\n            type=\"button\"\n            onClick={this.addOne}\n            className=\"counter__button__one button is-info is-rounded\"\n          >\n            Add one\n          </button>\n          <button\n            type=\"button\"\n            className=\"counter__button__hundred button is-info is-rounded\"\n            onClick={this.add100}\n          >\n            Add one hundred\n          </button>\n          <button\n            type=\"button\"\n            className=\"counter__button__multiply button is-info is-rounded\"\n            onClick={this.multiply10}\n          >\n            Multiply one ten\n          </button>\n          <button\n            type=\"button\"\n            className=\"counter__button__increase button is-danger is-rounded\"\n            onClick={this.random}\n          >\n            Random\n          </button>\n          <button\n            type=\"button\"\n            className=\"counter__button__increase button is-warning is-rounded\"\n            onClick={this.increase}\n          >\n            Increase\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className=\"counter__button__clear button is-danger is-rounded\"\n          onClick={this.setClear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}